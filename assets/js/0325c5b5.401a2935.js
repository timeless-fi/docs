"use strict";(self.webpackChunktimeless_docs=self.webpackChunktimeless_docs||[]).push([[8219],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1290:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:4},s="Compounded Perpetual Yield Token (xPYT)",l={unversionedId:"concepts/xpyt",id:"concepts/xpyt",title:"Compounded Perpetual Yield Token (xPYT)",description:"Intro",source:"@site/docs/concepts/xpyt.md",sourceDirName:"concepts",slug:"/concepts/xpyt",permalink:"/docs/concepts/xpyt",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Negative Yield Token (NYT)",permalink:"/docs/concepts/nyt"},next:{title:"Yield Boosting",permalink:"/docs/concepts/yield-boosting"}},u={},p=[{value:"Intro",id:"intro",level:2},{value:"Why?",id:"why",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"compounded-perpetual-yield-token-xpyt"},"Compounded Perpetual Yield Token (xPYT)"),(0,i.kt)("h2",{id:"intro"},"Intro"),(0,i.kt)("p",null,"xPYTs are auto-compounding vaults that compound the yield generated by PYTs (which is paid in the underlying asset) into more PYTs."),(0,i.kt)("p",null,"xPYTs are permissionlessly managed, meaning anyone can trigger the auto-compounding and earn a fee for doing so. In practice, this means xPYTs rely on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/flashbots/pm"},"MEV bots")," to handle the auto-compounding. Thus, xPYTs do not rely on any centralized infrastructure for auto-compounding, it is done in the most decentralized way."),(0,i.kt)("h2",{id:"why"},"Why?"),(0,i.kt)("p",null,"There are three reasons why xPYT was introduced:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Composability:")," PYT attributes accrued yield to the current holder, and the yield stays with the holder even when the PYT is transferred. This means if PYT is used in another protocol that's not aware of Timeless (e.g. Uniswap), the yield accrued to their smart contracts may be locked forever. xPYT abstracts away the yield claiming, and thus can be used in any another protocol without needing to worry about the accrued yield being stuck."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Efficiency:")," Spreading the cost of compounding yield into PYT across all xPYT holders means the cost to each holder is much less."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Simplicity:")," The experience of holding xPYT is much simpler than having to regularly claim the accrued yield.")))}m.isMDXComponent=!0}}]);