"use strict";(self.webpackChunkbunni_docs=self.webpackChunkbunni_docs||[]).push([[4301],{3905:(t,e,a)=>{a.d(e,{Zo:()=>o,kt:()=>s});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),m=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},o=function(t){var e=m(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,o=d(t,["components","mdxType","originalType","parentName"]),k=m(a),s=r,N=k["".concat(p,".").concat(s)]||k[s]||u[s]||l;return a?n.createElement(N,i(i({ref:e},o),{},{components:a})):n.createElement(N,i({ref:e},o))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},9004:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={title:"AmAmm",hide_table_of_contents:!1,sidebar_position:5},i="AmAmm",d={unversionedId:"v2/technical/core/amamm",id:"v2/technical/core/amamm",title:"AmAmm",description:"AmAmm is an implementation of the Auction-Managed Automated Market Maker (am-AMM) system.",source:"@site/docs/v2/technical/core/amamm.md",sourceDirName:"v2/technical/core",slug:"/v2/technical/core/amamm",permalink:"/docs/v2/technical/core/amamm",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"AmAmm",hide_table_of_contents:!1,sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"BunnZone",permalink:"/docs/v2/technical/core/zone"},next:{title:"BunniLens",permalink:"/docs/v2/technical/periphery/lens"}},p={},m=[{value:"Structs",id:"structs",level:2},{value:"Bid",id:"bid",level:3},{value:"<code>BunniHook</code> Payload Format",id:"bunnihook-payload-format",level:2},{value:"Payload Encoding",id:"payload-encoding",level:3},{value:"Important Notes",id:"important-notes",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"Functions",id:"functions",level:2},{value:"bid",id:"bid-1",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"depositIntoTopBid",id:"depositintotopbid",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"withdrawFromTopBid",id:"withdrawfromtopbid",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"depositIntoNextBid",id:"depositintonextbid",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"withdrawFromNextBid",id:"withdrawfromnextbid",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"cancelNextBid",id:"cancelnextbid",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Returns:",id:"returns",level:4},{value:"claimRefund",id:"claimrefund",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"claimFees",id:"claimfees",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"setBidPayload",id:"setbidpayload",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"getTopBid",id:"gettopbid",level:3},{value:"Parameters:",id:"parameters-9",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"getTopBidWrite",id:"gettopbidwrite",level:3},{value:"Parameters:",id:"parameters-10",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"getNextBid",id:"getnextbid",level:3},{value:"Parameters:",id:"parameters-11",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"getNextBidWrite",id:"getnextbidwrite",level:3},{value:"Parameters:",id:"parameters-12",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"getRefund",id:"getrefund",level:3},{value:"Parameters:",id:"parameters-13",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"getRefundWrite",id:"getrefundwrite",level:3},{value:"Parameters:",id:"parameters-14",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"getFees",id:"getfees",level:3},{value:"Parameters:",id:"parameters-15",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"updateStateMachine",id:"updatestatemachine",level:3},{value:"Parameters:",id:"parameters-16",level:4},{value:"Events",id:"events",level:2},{value:"SubmitBid",id:"submitbid",level:3},{value:"Parameters:",id:"parameters-17",level:4},{value:"DepositIntoTopBid",id:"depositintotopbid-1",level:3},{value:"Parameters:",id:"parameters-18",level:4},{value:"WithdrawFromTopBid",id:"withdrawfromtopbid-1",level:3},{value:"Parameters:",id:"parameters-19",level:4},{value:"DepositIntoNextBid",id:"depositintonextbid-1",level:3},{value:"Parameters:",id:"parameters-20",level:4},{value:"WithdrawFromNextBid",id:"withdrawfromnextbid-1",level:3},{value:"Parameters:",id:"parameters-21",level:4},{value:"CancelNextBid",id:"cancelnextbid-1",level:3},{value:"Parameters:",id:"parameters-22",level:4},{value:"ClaimRefund",id:"claimrefund-1",level:3},{value:"Parameters:",id:"parameters-23",level:4},{value:"ClaimFees",id:"claimfees-1",level:3},{value:"Parameters:",id:"parameters-24",level:4},{value:"SetBidPayload",id:"setbidpayload-1",level:3},{value:"Parameters:",id:"parameters-25",level:4},{value:"Errors",id:"errors",level:2}],o={toc:m};function u(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"amamm"},"AmAmm"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AmAmm")," is an implementation of the Auction-Managed Automated Market Maker (am-AMM) system."),(0,r.kt)("p",null,"In Bunni v2 the ",(0,r.kt)("inlineCode",{parentName:"p"},"AmAmm")," contract is inherited by ",(0,r.kt)("a",{parentName:"p",href:"./hook"},(0,r.kt)("inlineCode",{parentName:"a"},"BunniHook")),", so function calls should be made on the ",(0,r.kt)("a",{parentName:"p",href:"./hook"},(0,r.kt)("inlineCode",{parentName:"a"},"BunniHook"))," contract. The token used to pay for rent is the LP token of the specific Bunni v2 pool."),(0,r.kt)("p",null,"The source code for ",(0,r.kt)("inlineCode",{parentName:"p"},"AmAmm")," can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Bunniapp/biddog"},"Biddog")," repo."),(0,r.kt)("h2",{id:"structs"},"Structs"),(0,r.kt)("h3",{id:"bid"},"Bid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Bid {\n    address manager;\n    uint40 epoch;\n    bytes7 payload;\n    uint128 rent;\n    uint128 deposit;\n}\n")),(0,r.kt)("p",null,"Represents a bid in the am-AMM system."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the bid manager")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"epoch"),(0,r.kt)("td",{parentName:"tr",align:null},"uint40"),(0,r.kt)("td",{parentName:"tr",align:null},"The epoch when the bid was created or last charged rent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes7"),(0,r.kt)("td",{parentName:"tr",align:null},"Payload specifying parameters the manager wants (e.g., swap fee)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rent"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"Rent per hour")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deposit"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"Rent deposit amount")))),(0,r.kt)("h2",{id:"bunnihook-payload-format"},(0,r.kt)("inlineCode",{parentName:"h2"},"BunniHook")," Payload Format"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"./hook"},(0,r.kt)("inlineCode",{parentName:"a"},"BunniHook"))," bid payload is a ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes7")," value that encodes three parameters used to configure pool behavior."),(0,r.kt)("h3",{id:"payload-encoding"},"Payload Encoding"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"bytes7")," payload is encoded as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"| swapFee0For1 (3 bytes) | swapFee1For0 (3 bytes) | enableSurgeFee (1 byte) |\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"swapFee0For1")," (3 bytes): A ",(0,r.kt)("inlineCode",{parentName:"li"},"uint24")," value representing the swap fee for token0 -> token1 swaps. 6 decimals."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"swapFee1For0")," (3 bytes): A ",(0,r.kt)("inlineCode",{parentName:"li"},"uint24")," value representing the swap fee for token1 -> token0 swaps. 6 decimals."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"enableSurgeFee")," (1 byte): A ",(0,r.kt)("inlineCode",{parentName:"li"},"uint8")," value (0 or 1) indicating whether the surge fee is enabled.")),(0,r.kt)("h3",{id:"important-notes"},"Important Notes"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The swap fees are represented as ",(0,r.kt)("inlineCode",{parentName:"li"},"uint24")," values, allowing for a wide range of fee settings."),(0,r.kt)("li",{parentName:"ol"},"The surge fee is enabled if the last byte of the payload is non-zero."),(0,r.kt)("li",{parentName:"ol"},"When encoding the payload, ensure that the swap fee values do not exceed the maximum value for swap fees (",(0,r.kt)("inlineCode",{parentName:"li"},"1e6"),").")),(0,r.kt)("h3",{id:"example-usage"},"Example Usage"),(0,r.kt)("p",null,"Here's an example of how to encode/decode the payload:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function encodeAmAmmPayload(\n    uint24 swapFee0For1,\n    uint24 swapFee1For0,\n    bool enableSurgeFee\n) pure returns (bytes7) {\n    return bytes7(\n        abi.encodePacked(swapFee0For1, swapFee1For0, enableSurgeFee)\n    );\n}\n\nfunction decodeAmAmmPayload(bytes7 payload)\n    pure\n    returns (uint24 swapFee0For1, uint24 swapFee1For0, bool enableSurgeFee)\n{\n    swapFee0For1 = uint24(bytes3(payload));\n    swapFee1For0 = uint24(bytes3(payload << 24));\n    enableSurgeFee = uint8(payload[6]) != 0;\n}\n")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"bid-1"},"bid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function bid(\n    PoolId id,\n    address manager,\n    bytes7 payload,\n    uint128 rent,\n    uint128 deposit\n) external;\n")),(0,r.kt)("p",null,"Places a bid to become the manager of a pool."),(0,r.kt)("p",null,"Will transfer ",(0,r.kt)("inlineCode",{parentName:"p"},"deposit")," LP tokens of the Bunni v2 pool specified by ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender"),", so ERC-20 approval should have been given prior to calling this function."),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the account that will manage the pool if bid wins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes7"),(0,r.kt)("td",{parentName:"tr",align:null},"Encoded data specifying parameters the manager wants (e.g., swap fee)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rent"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of rent per hour the manager is willing to pay")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deposit"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"The initial deposit amount, must be a multiple of rent and cover rent for \u2265K epochs")))),(0,r.kt)("h3",{id:"depositintotopbid"},"depositIntoTopBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function depositIntoTopBid(PoolId id, uint128 amount) external;\n")),(0,r.kt)("p",null,"Adds deposit to the top bid. Only callable by the current top bid manager."),(0,r.kt)("p",null,"Will transfer ",(0,r.kt)("inlineCode",{parentName:"p"},"amount")," LP tokens of the Bunni v2 pool specified by ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender"),", so ERC-20 approval should have been given prior to calling this function."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount to deposit, must be a multiple of rent")))),(0,r.kt)("h3",{id:"withdrawfromtopbid"},"withdrawFromTopBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawFromTopBid(\n    PoolId id,\n    uint128 amount,\n    address recipient\n) external;\n")),(0,r.kt)("p",null,"Withdraws from the deposit of the top bid. Only callable by the current top bid manager. Reverts if ",(0,r.kt)("inlineCode",{parentName:"p"},"deposit / rent < K")," after the function returns"),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount to withdraw, must be a multiple of rent and leave deposit / rent \u2265 K")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that will receive the withdrawn amount")))),(0,r.kt)("h3",{id:"depositintonextbid"},"depositIntoNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function depositIntoNextBid(PoolId id, uint128 amount) external;\n")),(0,r.kt)("p",null,"Adds deposit to the next bid. Only callable by the next bid manager."),(0,r.kt)("p",null,"Will transfer ",(0,r.kt)("inlineCode",{parentName:"p"},"amount")," LP tokens of the Bunni v2 pool specified by ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender"),", so ERC-20 approval should have been given prior to calling this function."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount to deposit, must be a multiple of rent")))),(0,r.kt)("h3",{id:"withdrawfromnextbid"},"withdrawFromNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdrawFromNextBid(\n    PoolId id,\n    uint128 amount,\n    address recipient\n) external;\n")),(0,r.kt)("p",null,"Withdraws from the deposit of the next bid. Only callable by the next bid manager. Reverts if ",(0,r.kt)("inlineCode",{parentName:"p"},"deposit / rent < K")," after the function returns."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount to withdraw, must be a multiple of rent and leave deposit / rent \u2265 K")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that will receive the withdrawn amount")))),(0,r.kt)("h3",{id:"cancelnextbid"},"cancelNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function cancelNextBid(PoolId id, address recipient) external returns (uint256 refund);\n")),(0,r.kt)("p",null,"Cancels the next bid. Only callable by the next bid manager."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that will receive the refunded deposit")))),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of deposit refunded")))),(0,r.kt)("h3",{id:"claimrefund"},"claimRefund"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function claimRefund(PoolId id, address recipient) external returns (uint256 refund);\n")),(0,r.kt)("p",null,"Claims the refundable deposit of a pool owed to the caller."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that will receive the refund")))),(0,r.kt)("h4",{id:"returns-1"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of refund claimed")))),(0,r.kt)("h3",{id:"claimfees"},"claimFees"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function claimFees(Currency currency, address recipient) external returns (uint256 fees);\n")),(0,r.kt)("p",null,"Claims the accrued fees of the caller for a specific currency."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"currency"),(0,r.kt)("td",{parentName:"tr",align:null},"Currency"),(0,r.kt)("td",{parentName:"tr",align:null},"The currency of the fees to be claimed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address that will receive the fees")))),(0,r.kt)("h4",{id:"returns-2"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of fees claimed")))),(0,r.kt)("h3",{id:"setbidpayload"},"setBidPayload"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function setBidPayload(PoolId id, bytes7 payload, bool topBid) external;\n")),(0,r.kt)("p",null,"Sets the payload of a pool. Only callable by the manager of either the top bid or the next bid."),(0,r.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes7"),(0,r.kt)("td",{parentName:"tr",align:null},"The new payload specifying parameters (e.g., swap fee)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"topBid"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"True if setting for the top bid, false if setting for the next bid")))),(0,r.kt)("h3",{id:"gettopbid"},"getTopBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTopBid(PoolId id) external view returns (Bid memory);\n")),(0,r.kt)("p",null,"Retrieves the current top bid for a pool."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h4",{id:"returns-3"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bid"),(0,r.kt)("td",{parentName:"tr",align:null},"A struct containing the details of the top bid")))),(0,r.kt)("h3",{id:"gettopbidwrite"},"getTopBidWrite"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTopBidWrite(PoolId id) external returns (Bid memory);\n")),(0,r.kt)("p",null,"Updates the am-AMM state of a pool and then retrieves the top bid."),(0,r.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h4",{id:"returns-4"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bid"),(0,r.kt)("td",{parentName:"tr",align:null},"A struct containing the details of the top bid")))),(0,r.kt)("h3",{id:"getnextbid"},"getNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNextBid(PoolId id) external view returns (Bid memory);\n")),(0,r.kt)("p",null,"Retrieves the current next bid for a pool."),(0,r.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h4",{id:"returns-5"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bid"),(0,r.kt)("td",{parentName:"tr",align:null},"A struct containing the details of the next bid")))),(0,r.kt)("h3",{id:"getnextbidwrite"},"getNextBidWrite"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNextBidWrite(PoolId id) external returns (Bid memory);\n")),(0,r.kt)("p",null,"Updates the am-AMM state of a pool and then retrieves the next bid."),(0,r.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h4",{id:"returns-6"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bid"),(0,r.kt)("td",{parentName:"tr",align:null},"A struct containing the details of the next bid")))),(0,r.kt)("h3",{id:"getrefund"},"getRefund"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRefund(address manager, PoolId id) external view returns (uint256);\n")),(0,r.kt)("p",null,"Retrieves the refundable deposit amount for a specific manager in a pool."),(0,r.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h4",{id:"returns-7"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of refundable deposit")))),(0,r.kt)("h3",{id:"getrefundwrite"},"getRefundWrite"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getRefundWrite(address manager, PoolId id) external returns (uint256);\n")),(0,r.kt)("p",null,"Updates the am-AMM state of a pool and then retrieves the refundable deposit amount for a specific manager."),(0,r.kt)("h4",{id:"parameters-14"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h4",{id:"returns-8"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of refundable deposit")))),(0,r.kt)("h3",{id:"getfees"},"getFees"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFees(address manager, Currency currency) external view returns (uint256);\n")),(0,r.kt)("p",null,"Retrieves the amount of fees accrued by a manager for a specific currency."),(0,r.kt)("h4",{id:"parameters-15"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"currency"),(0,r.kt)("td",{parentName:"tr",align:null},"Currency"),(0,r.kt)("td",{parentName:"tr",align:null},"The currency of the fees")))),(0,r.kt)("h4",{id:"returns-9"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of accrued fees")))),(0,r.kt)("h3",{id:"updatestatemachine"},"updateStateMachine"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function updateStateMachine(PoolId id) external;\n")),(0,r.kt)("p",null,"Triggers a state machine update for the given pool."),(0,r.kt)("h4",{id:"parameters-16"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the pool")))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"submitbid"},"SubmitBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event SubmitBid(\n    PoolId indexed id,\n    address indexed manager,\n    uint40 indexed epoch,\n    bytes7 payload,\n    uint128 rent,\n    uint128 deposit\n)\n")),(0,r.kt)("p",null,"Emitted when a new bid is submitted."),(0,r.kt)("h4",{id:"parameters-17"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager submitting the bid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"epoch"),(0,r.kt)("td",{parentName:"tr",align:null},"uint40"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The epoch when the bid was submitted")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes7"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The payload specifying bid parameters")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rent"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The rent amount per hour")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deposit"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The deposit amount for the bid")))),(0,r.kt)("h3",{id:"depositintotopbid-1"},"DepositIntoTopBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event DepositIntoTopBid(PoolId indexed id, address indexed manager, uint128 amount)\n")),(0,r.kt)("p",null,"Emitted when a deposit is made into the top bid."),(0,r.kt)("h4",{id:"parameters-18"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager making the deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount deposited")))),(0,r.kt)("h3",{id:"withdrawfromtopbid-1"},"WithdrawFromTopBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event WithdrawFromTopBid(PoolId indexed id, address indexed manager, address indexed recipient, uint128 amount)\n")),(0,r.kt)("p",null,"Emitted when a withdrawal is made from the top bid."),(0,r.kt)("h4",{id:"parameters-19"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager making the withdrawal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address receiving the withdrawn amount")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount withdrawn")))),(0,r.kt)("h3",{id:"depositintonextbid-1"},"DepositIntoNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event DepositIntoNextBid(PoolId indexed id, address indexed manager, uint128 amount)\n")),(0,r.kt)("p",null,"Emitted when a deposit is made into the next bid."),(0,r.kt)("h4",{id:"parameters-20"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager making the deposit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount deposited")))),(0,r.kt)("h3",{id:"withdrawfromnextbid-1"},"WithdrawFromNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event WithdrawFromNextBid(PoolId indexed id, address indexed manager, address indexed recipient, uint128 amount)\n")),(0,r.kt)("p",null,"Emitted when a withdrawal is made from the next bid."),(0,r.kt)("h4",{id:"parameters-21"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager making the withdrawal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address receiving the withdrawn amount")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount withdrawn")))),(0,r.kt)("h3",{id:"cancelnextbid-1"},"CancelNextBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event CancelNextBid(PoolId indexed id, address indexed manager, address indexed recipient, uint256 refund)\n")),(0,r.kt)("p",null,"Emitted when the next bid is cancelled."),(0,r.kt)("h4",{id:"parameters-22"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager cancelling the bid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address receiving the refund")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"refund"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount refunded")))),(0,r.kt)("h3",{id:"claimrefund-1"},"ClaimRefund"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ClaimRefund(PoolId indexed id, address indexed manager, address indexed recipient, uint256 refund)\n")),(0,r.kt)("p",null,"Emitted when a refund is claimed."),(0,r.kt)("h4",{id:"parameters-23"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager claiming the refund")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address receiving the refund")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"refund"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount refunded")))),(0,r.kt)("h3",{id:"claimfees-1"},"ClaimFees"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event ClaimFees(Currency indexed currency, address indexed manager, address indexed recipient, uint256 fees)\n")),(0,r.kt)("p",null,"Emitted when fees are claimed."),(0,r.kt)("h4",{id:"parameters-24"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"currency"),(0,r.kt)("td",{parentName:"tr",align:null},"Currency"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The currency of the claimed fees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager claiming the fees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recipient"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address receiving the fees")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fees"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of fees claimed")))),(0,r.kt)("h3",{id:"setbidpayload-1"},"SetBidPayload"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event SetBidPayload(PoolId indexed id, address indexed manager, bytes7 payload, bool topBid)\n")),(0,r.kt)("p",null,"Emitted when a bid payload is set."),(0,r.kt)("h4",{id:"parameters-25"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Indexed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"PoolId"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the pool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the manager setting the payload")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes7"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The new payload")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"topBid"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether this is for the top bid or next bid")))),(0,r.kt)("h2",{id:"errors"},"Errors"),(0,r.kt)("p",null,"The interface defines several custom errors:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AmAmm__BidLocked()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AmAmm__InvalidBid()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AmAmm__NotEnabled()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AmAmm__Unauthorized()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AmAmm__InvalidDepositAmount()"))),(0,r.kt)("p",null,"These errors are used to provide more specific information about failures in the am-AMM system."))}u.isMDXComponent=!0}}]);