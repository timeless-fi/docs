"use strict";(self.webpackChunktimeless_docs=self.webpackChunktimeless_docs||[]).push([[8507],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=c(a),k=r,m=s["".concat(p,".").concat(k)]||s[k]||u[k]||l;return a?n.createElement(m,o(o({ref:t},d),{},{components:a})):n.createElement(m,o({ref:t},d))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},4541:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={},o="Factory",i={unversionedId:"smart-contracts/core/Factory",id:"smart-contracts/core/Factory",title:"Factory",description:"GitHub: link",source:"@site/docs/smart-contracts/core/Factory.md",sourceDirName:"smart-contracts/core",slug:"/smart-contracts/core/Factory",permalink:"/docs/smart-contracts/core/Factory",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gate",permalink:"/docs/smart-contracts/core/Gate"},next:{title:"Introduction",permalink:"/docs/smart-contracts/swapper/intro"}},p={},c=[{value:"Errors",id:"errors",level:2},{value:"Error_ProtocolFeeRecipientIsZero",id:"error_protocolfeerecipientiszero",level:3},{value:"Events",id:"events",level:2},{value:"SetProtocolFee",id:"setprotocolfee",level:3},{value:"DeployYieldTokenPair",id:"deployyieldtokenpair",level:3},{value:"Structs",id:"structs",level:2},{value:"ProtocolFeeInfo",id:"protocolfeeinfo",level:3},{value:"State variables",id:"state-variables",level:2},{value:"protocolFeeInfo",id:"protocolfeeinfo-1",level:3},{value:"State-mutating functions",id:"state-mutating-functions",level:2},{value:"deployYieldTokenPair",id:"deployyieldtokenpair-1",level:3},{value:"View functions",id:"view-functions",level:2},{value:"getNegativeYieldToken",id:"getnegativeyieldtoken",level:3},{value:"getPerpetualYieldToken",id:"getperpetualyieldtoken",level:3},{value:"Owner functions",id:"owner-functions",level:2},{value:"ownerSetProtocolFee",id:"ownersetprotocolfee",level:3},{value:"Internal functions",id:"internal-functions",level:2},{value:"_computeYieldTokenAddress",id:"_computeyieldtokenaddress",level:3}],d={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"factory"},"Factory"),(0,r.kt)("p",null,"GitHub: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/timeless-fi/timeless/blob/main/src/Factory.sol"},"link")),(0,r.kt)("h2",{id:"errors"},"Errors"),(0,r.kt)("h3",{id:"error_protocolfeerecipientiszero"},"Error_ProtocolFeeRecipientIsZero"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error Error_ProtocolFeeRecipientIsZero()\n")),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"setprotocolfee"},"SetProtocolFee"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event SetProtocolFee(struct Factory.ProtocolFeeInfo protocolFeeInfo_)\n")),(0,r.kt)("h3",{id:"deployyieldtokenpair"},"DeployYieldTokenPair"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event DeployYieldTokenPair(contract Gate gate, address vault, contract NegativeYieldToken nyt, contract PerpetualYieldToken pyt)\n")),(0,r.kt)("h2",{id:"structs"},"Structs"),(0,r.kt)("h3",{id:"protocolfeeinfo"},"ProtocolFeeInfo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct ProtocolFeeInfo {\n  uint8 fee;\n  address recipient;\n}\n")),(0,r.kt)("h2",{id:"state-variables"},"State variables"),(0,r.kt)("h3",{id:"protocolfeeinfo-1"},"protocolFeeInfo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Factory.ProtocolFeeInfo protocolFeeInfo\n")),(0,r.kt)("p",null,"The protocol fee and the fee recipient address."),(0,r.kt)("h2",{id:"state-mutating-functions"},"State-mutating functions"),(0,r.kt)("h3",{id:"deployyieldtokenpair-1"},"deployYieldTokenPair"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function deployYieldTokenPair(contract Gate gate, address vault) public virtual returns (contract NegativeYieldToken nyt, contract PerpetualYieldToken pyt)\n")),(0,r.kt)("p",null,"Deploys the NegativeYieldToken and PerpetualYieldToken associated with a vault."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Will revert if they have already been deployed.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gate"),(0,r.kt)("td",{parentName:"tr",align:null},"contract Gate"),(0,r.kt)("td",{parentName:"tr",align:null},"The gate that will use the NYT and PYT")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The vault to deploy NYT and PYT for")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nyt"),(0,r.kt)("td",{parentName:"tr",align:null},"contract NegativeYieldToken"),(0,r.kt)("td",{parentName:"tr",align:null},"The deployed NegativeYieldToken")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pyt"),(0,r.kt)("td",{parentName:"tr",align:null},"contract PerpetualYieldToken"),(0,r.kt)("td",{parentName:"tr",align:null},"The deployed PerpetualYieldToken")))),(0,r.kt)("h2",{id:"view-functions"},"View functions"),(0,r.kt)("h3",{id:"getnegativeyieldtoken"},"getNegativeYieldToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNegativeYieldToken(contract Gate gate, address vault) public view virtual returns (contract NegativeYieldToken)\n")),(0,r.kt)("p",null,"Returns the NegativeYieldToken associated with a gate & vault pair."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns non-zero value even if the contract hasn't been deployed yet.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gate"),(0,r.kt)("td",{parentName:"tr",align:null},"contract Gate"),(0,r.kt)("td",{parentName:"tr",align:null},"The gate to query")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The vault to query")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"contract NegativeYieldToken"),(0,r.kt)("td",{parentName:"tr",align:null},"The NegativeYieldToken address")))),(0,r.kt)("h3",{id:"getperpetualyieldtoken"},"getPerpetualYieldToken"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPerpetualYieldToken(contract Gate gate, address vault) public view virtual returns (contract PerpetualYieldToken)\n")),(0,r.kt)("p",null,"Returns the PerpetualYieldToken associated with a gate & vault pair."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Returns non-zero value even if the contract hasn't been deployed yet.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gate"),(0,r.kt)("td",{parentName:"tr",align:null},"contract Gate"),(0,r.kt)("td",{parentName:"tr",align:null},"The gate to query")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"The vault to query")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"contract PerpetualYieldToken"),(0,r.kt)("td",{parentName:"tr",align:null},"The PerpetualYieldToken address")))),(0,r.kt)("h2",{id:"owner-functions"},"Owner functions"),(0,r.kt)("h3",{id:"ownersetprotocolfee"},"ownerSetProtocolFee"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function ownerSetProtocolFee(struct Factory.ProtocolFeeInfo protocolFeeInfo_) external virtual\n")),(0,r.kt)("p",null,"Updates the protocol fee and/or the protocol fee recipient.\nOnly callable by the owner."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"protocolFeeInfo","_"),(0,r.kt)("td",{parentName:"tr",align:null},"struct Factory.ProtocolFeeInfo"),(0,r.kt)("td",{parentName:"tr",align:null},"The new protocol fee info")))),(0,r.kt)("h2",{id:"internal-functions"},"Internal functions"),(0,r.kt)("h3",{id:"_computeyieldtokenaddress"},"_","computeYieldTokenAddress"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _computeYieldTokenAddress(contract Gate gate, address vault, bool isPerpetualYieldToken) internal view virtual returns (address)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Computes the address of PYTs and NYTs using CREATE2.")))}u.isMDXComponent=!0}}]);